[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "The Data Dive",
    "section": "",
    "text": "```{css, echo=FALSE} .quarto-title { display: none; }\n.description { display: none; } ```\n\n\n\n\n\n\n\n\n\n\nSupreme Court Appointments in the Democratic-Republican Era\n\n\n\n\n\n\npolitics\n\n\n\nIn a time where the completely impartial Supreme Court is continually accused of being politically biased, it is worth considering which party has more strongly controlled the nomination process. This post explores various dimensions of appointee data over the last 150 years, concluding with a rolling mean score of how many appointees are appointed by each party that shows a shocking trend!\n\n\n\n\n\nApr 3, 2024\n\n\nDuncan Gates\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome\n\n\n\n\n\n\nwelcome\n\n\n\nAn introductory post about what is here.\n\n\n\n\n\nMar 3, 2023\n\n\nDuncan Gates\n\n\n\n\n\n\n\n\n\n\n\n\nVisualizing a Billion Rows of Data\n\n\n\n\n\n\nApache Arrow\n\n\nVisualizing\n\n\n\nA post about using apache arrow and efficiently visualizing in R\n\n\n\n\n\nMar 2, 2023\n\n\nDuncan Gates\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "art.html",
    "href": "art.html",
    "title": "Art",
    "section": "",
    "text": "Generative Art\n\n\n\n\n\n\n\n\n\n\nBubblycircle\n\n\n\n\n\n\n\n\n\nCircleart\n\n\n\n\n\n\n\n\n\nCool_stream3\n\n\n\n\n\n\n\n\n\nPerlincircles\n\n\n\n\n\n\n\n\n\nSpaceflower\n\n\n\n\n\n\n\n\n\nTiling_intersects\n\n\n\n\n\n\n\n\n\nTripleflametree\n\n\n\n\n\n\n\n\n\nMaps\n\n\n\n\n\n\n\n\n\n\nPortland_buildings_created\n\n\n\n\n\n\n\n\n\nPortland_buildings_created2\n\n\n\n\n\n\n\n\n\nPortland_circle_map\n\n\n\n\n\n\n\n\n\nRecreations\n\n\n\n\n\n\n\n\n\n\nHeart\n\n\n\n\n\n\n\n\n\nThree_sisters_abstract"
  },
  {
    "objectID": "blog/2023-03-02-visualizing-a-billion-rows-of-data-in-r-with-apache-arrow/index.html",
    "href": "blog/2023-03-02-visualizing-a-billion-rows-of-data-in-r-with-apache-arrow/index.html",
    "title": "Visualizing a Billion Rows of Data",
    "section": "",
    "text": "Almost everyone has heard of the NYC taxi data at this point, in its current form it is about 24 columns and just under 1.7 billion rows. Each row represents a ride that occurred somewhere between 2009 and 2022. The important columns in this visualization are\n\npickup_longitude (double): Longitude data for the pickup location\npickup_latitude (double): Latitude data for the pickup location\ndropoff_longitude (double): Longitude data for the dropoff location\ndropoff_latitude (double): Latitude data for the dropoff location"
  },
  {
    "objectID": "blog/2023-03-02-visualizing-a-billion-rows-of-data-in-r-with-apache-arrow/index.html#the-nyc-taxi-data",
    "href": "blog/2023-03-02-visualizing-a-billion-rows-of-data-in-r-with-apache-arrow/index.html#the-nyc-taxi-data",
    "title": "Visualizing a Billion Rows of Data",
    "section": "",
    "text": "Almost everyone has heard of the NYC taxi data at this point, in its current form it is about 24 columns and just under 1.7 billion rows. Each row represents a ride that occurred somewhere between 2009 and 2022. The important columns in this visualization are\n\npickup_longitude (double): Longitude data for the pickup location\npickup_latitude (double): Latitude data for the pickup location\ndropoff_longitude (double): Longitude data for the dropoff location\ndropoff_latitude (double): Latitude data for the dropoff location"
  },
  {
    "objectID": "blog/2023-03-02-visualizing-a-billion-rows-of-data-in-r-with-apache-arrow/index.html#libraries",
    "href": "blog/2023-03-02-visualizing-a-billion-rows-of-data-in-r-with-apache-arrow/index.html#libraries",
    "title": "Visualizing a Billion Rows of Data",
    "section": "Libraries",
    "text": "Libraries\nThere are the libraries used for tranforming and visualizing."
  },
  {
    "objectID": "blog/2023-03-02-visualizing-a-billion-rows-of-data-in-r-with-apache-arrow/index.html#loading-the-data",
    "href": "blog/2023-03-02-visualizing-a-billion-rows-of-data-in-r-with-apache-arrow/index.html#loading-the-data",
    "title": "Visualizing a Billion Rows of Data",
    "section": "Loading the Data",
    "text": "Loading the Data\nThis transfers the nearly 70 gigabytes of taxi data to my computer.\n\ncopy_files(\n  from = s3_bucket(\"ursa-labs-taxi-data-v2\"),\n  to = \"~/Downloads/nyc-taxi\"\n)\n\nThe datasets can subsequently be opened as such.\n\nnyc_taxi_tiny &lt;- arrow::open_dataset(\"~/Downloads/nyc-taxi-tiny/\")\nnyc_taxi &lt;- arrow::open_dataset(\"~/Downloads/nyc-taxi/\")"
  },
  {
    "objectID": "blog/2023-03-02-visualizing-a-billion-rows-of-data-in-r-with-apache-arrow/index.html#checking-it-out",
    "href": "blog/2023-03-02-visualizing-a-billion-rows-of-data-in-r-with-apache-arrow/index.html#checking-it-out",
    "title": "Visualizing a Billion Rows of Data",
    "section": "Checking it out",
    "text": "Checking it out\n\nglimpse(nyc_taxi_tiny)"
  },
  {
    "objectID": "blog/2023-03-02-visualizing-a-billion-rows-of-data-in-r-with-apache-arrow/index.html#plotting-a-million-rows",
    "href": "blog/2023-03-02-visualizing-a-billion-rows-of-data-in-r-with-apache-arrow/index.html#plotting-a-million-rows",
    "title": "Visualizing a Billion Rows of Data",
    "section": "Plotting a million rows",
    "text": "Plotting a million rows\n\ntic()\nnyc_pickups &lt;- nyc_taxi_tiny |&gt;\n  select(pickup_longitude, pickup_latitude) |&gt;\n  filter(\n    !is.na(pickup_longitude),\n    !is.na(pickup_latitude)\n  ) |&gt;\n  collect()\ntoc()\n\nLet’s check out nyc_pickups\n\nglimpse(nyc_pickups)\n\nThis goes pretty quick now\n\nx0 &lt;- -74.05 # minimum longitude to plot\ny0 &lt;- 40.6   # minimum latitude to plot\nspan &lt;- 0.3  # size of the lat/long window to plot\n\ntic()\npic &lt;- ggplot(nyc_pickups) +\n  geom_point(\n    aes(pickup_longitude, pickup_latitude), \n    size = .2, \n    stroke = 0, \n    colour = \"#800020\"\n  ) +\n  scale_x_continuous(expand = c(0, 0)) +\n  scale_y_continuous(expand = c(0, 0)) +\n  theme_void() +\n  coord_equal(\n    xlim = x0 + c(0, span), \n    ylim = y0 + c(0, span)\n  )\npic\ntoc()"
  },
  {
    "objectID": "blog/2023-03-02-visualizing-a-billion-rows-of-data-in-r-with-apache-arrow/index.html#plotting-a-billion-rows",
    "href": "blog/2023-03-02-visualizing-a-billion-rows-of-data-in-r-with-apache-arrow/index.html#plotting-a-billion-rows",
    "title": "Visualizing a Billion Rows of Data",
    "section": "Plotting a billion rows",
    "text": "Plotting a billion rows\n\ntic()\npixels &lt;- 4000\npickup &lt;- nyc_taxi |&gt;\n  dplyr::filter(\n    !is.na(pickup_longitude),\n    !is.na(pickup_latitude),\n    pickup_longitude &gt; x0,\n    pickup_longitude &lt; x0 + span,\n    pickup_latitude &gt; y0,\n    pickup_latitude &lt; y0 + span\n  ) |&gt;\n  dplyr::mutate(\n    unit_scaled_x = (pickup_longitude - x0) / span,\n    unit_scaled_y = (pickup_latitude - y0) / span,\n    x = as.integer(round(pixels * unit_scaled_x)), \n    y = as.integer(round(pixels * unit_scaled_y))\n  ) |&gt;\n  dplyr::group_by(x, y) |&gt;\n  dplyr::summarise(pickup = n()) |&gt;\n  # dplyr::count(x, y, name = \"pickup\") |&gt;\n  dplyr::collect()\ntoc()\n\nMy laptop solves this in 27.51 seconds, again lets take a look at the resulting dataframe.\n\nglimpse(pickup)\n\n\ntic()\ngrid &lt;- expand_grid(x = 1:pixels, y = 1:pixels) |&gt;\n  left_join(pickup, by = c(\"x\", \"y\")) |&gt;\n  mutate(pickup = replace_na(pickup,  0))\ntoc()\n\n\ntic()\npickup_grid &lt;- matrix(\n  data = grid$pickup,\n  nrow = pixels,\n  ncol = pixels\n)\ntoc()\n\n\nrender_image &lt;- function(mat, cols = c(\"white\", \"#800020\")) {\n  op &lt;- par(mar = c(0, 0, 0, 0))\n  shades &lt;- colorRampPalette(cols)\n  image(\n    z = log10(t(mat + 1)),\n    axes = FALSE,\n    asp = 1,\n    col = shades(1000),\n    useRaster = TRUE\n  )\n  par(op)\n}"
  },
  {
    "objectID": "blog/2023-03-02-visualizing-a-billion-rows-of-data-in-r-with-apache-arrow/index.html#rendering-and-saving",
    "href": "blog/2023-03-02-visualizing-a-billion-rows-of-data-in-r-with-apache-arrow/index.html#rendering-and-saving",
    "title": "Visualizing a Billion Rows of Data",
    "section": "Rendering and saving",
    "text": "Rendering and saving\n\ntic()\npng(file = here::here(\"imgs/taxi_viz_billion_rows.png\"),\n    bg = \"#27233a\",\n    width = 4000,\n    height = 4000)\nrender_image(pickup_grid, cols = c(\"#27233a\", \"white\", \"#F46036\"))\ndev.off()\ntoc()\n\n\nknitr::include_graphics(here::here(\"imgs/taxi_viz_billion_rows.png\"))"
  },
  {
    "objectID": "blog/2023-03-03-welcome/index.html",
    "href": "blog/2023-03-03-welcome/index.html",
    "title": "Welcome",
    "section": "",
    "text": "This is a blog where I write about anything that strikes my momentary interest, which often involves a lot of data.\n\n\n`geom_smooth()` using formula = 'y ~ s(x, bs = \"cs\")'"
  },
  {
    "objectID": "index.html#pages",
    "href": "index.html#pages",
    "title": "The Data Dive",
    "section": "Pages",
    "text": "Pages\n\n\n\n\n\n\n\n\n\n\nArt\n\n\nArt that I have made writing R code most of the time, occasionally other languages as well\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe Data Dive\n\n\nWhere I write\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMaps\n\n\nMaps that I have made, I love maps as a preview, as a tool to understand where you are, and a way to envision your present and future location.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeb Apps\n\n\nWeb apps that I have made to do various things, mostly data related.\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "apps.html",
    "href": "apps.html",
    "title": "Web Apps",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "apps.html#quarto",
    "href": "apps.html#quarto",
    "title": "Web Apps",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "apps.html#running-code",
    "href": "apps.html#running-code",
    "title": "Web Apps",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "blog/2024-04-03-supreme-court/index.html",
    "href": "blog/2024-04-03-supreme-court/index.html",
    "title": "Supreme Court Appointments in the Democratic-Republican Era",
    "section": "",
    "text": "Since Harry Reid took the nuclear option in 2013 to reduce the cloture threshold for nominations, the idea that the Supreme Court is a non-partisan institution has been under severe threat. Subsequently, in 2017 the use once again by Mitch McConnell established a long running trend as a precedent - that of extreme partisan interest in every Supreme Court justice. This is clearly evident in the trend of votes for/against nominees, as well as the veto rate on nominees. An interesting, and annoying feature of nominations I discovered while conducting research on this is that voice votes in the Senate do not record any votes, and simply report whether or not the vote was approved, meaning that of 165 votes in the senate we instead only get 98 distinct votes with which to gauge justice approval rates. Despite this setback, quickly using rvest to get the data to visualize official Senate data shows the following:\n\nsenate_page &lt;- read_html(\"https://www.senate.gov/legislative/nominations/SupremeCourtNominations1789present.htm\")\n\nnomination_table &lt;- senate_page |&gt;\n  rvest::html_elements(\".contenttext\") |&gt;\n  purrr::pluck(2) |&gt;\n  rvest::html_table() |&gt;\n  dplyr::slice(-2) |&gt;\n  dplyr::select(-2, -4, -6, -8, -10) |&gt;\n  janitor::row_to_names(row_number = 1) |&gt;\n  dplyr::rename(Replace = 2,\n                Nominated = 3,\n                Vote = 4,\n                Result = 5,\n                Date = 6) |&gt;\n  dplyr::filter(Result %in% c(\"C\", \"N\", \"W\", \"P\", \"D\", \"R\")) |&gt;\n  dplyr::mutate(Vote = stringr::str_replace_all(Vote, \"\\\\s.*\", \"\"),\n                For = as.character(stringr::str_extract(Vote, \".*(?=-)\")),\n                Against = as.character(stringr::str_extract(Vote, \"(?&lt;=-).*\")),\n                Date = as.Date(Date, format = \"%b %d, %Y\"),\n                Nominated = as.Date(Nominated, format = \"%b %d, %Y\"))\n\nnomination_table |&gt;\n  dplyr::filter(Vote != \"V\") |&gt;\n  dplyr::select(-Vote) |&gt;\n  tidyr::pivot_longer(cols = c(For, Against), names_to = \"Vote\", values_to = \"Count\") |&gt;\n  tidyr::drop_na(Count) |&gt;\n  dplyr::arrange(dplyr::desc(Date)) |&gt;\n  dplyr::mutate(Count = as.numeric(Count)) |&gt;\n  ggplot(aes(x = Nominated, y = Count, fill = Vote)) +\n  geom_area(position = position_stack()) +\n  # facet_wrap(~ Nominee) +\n  scale_fill_manual(values = c(\"#040404\", \"#04abeb\")) +\n  scale_x_date(date_breaks = \"20 years\", \n               date_labels = \"%Y\", \n               limits = as.Date(c(\"1795-01-01\", \"2024-01-01\"))) +\n  DGThemes::theme_duncan()\n\n\n\n\n\n\n\n\nIt seems pretty clear from this visual that there has been a massive increase in votes against approval of supreme court justices over the last approximately 20 years. One could of course claim that this doesn’t account for control of the senate, but here is a chart showing senate composition over the last 40 years, which should be immediately make clear the question of that necessity.\n\n\n\n\n\n\n\n\n\nJust to make sure we’re not missing anything here, lets also look at the data on whether or not appointees were confirmed, declined, withdrawn, rejected, postponed, or no action was taken.\n\nnomination_table |&gt;\n  dplyr::mutate(Date = as.factor(as.numeric(lubridate::year(Date)))) |&gt;\n  ggplot(aes(x = Date, y = 1, fill = Result)) +\n  geom_col(width = 2) +\n  scale_y_continuous(limits = c(0, 1)) +\n  scale_x_discrete(breaks = c(\"1800\", \"1861\", \"1902\", \"1941\", \"1981\", \"2022\")) +\n  scale_fill_manual(values = MetBrewer::met.brewer(\"Archambault\", n = 6),\n                    labels = c(\"C\" = \"Confirmed\",\n                               \"N\" = \"No Action\",\n                               \"R\" = \"Rejected\",\n                               \"D\" = \"Declined\",\n                               \"P\" = \"Postponed\",\n                               \"W\" = \"Withdrawn\")) +\n  DGThemes::theme_duncan() +\n  theme(axis.text.y = element_blank(),\n        axis.title.y = element_blank(),\n        legend.direction = \"horizontal\",\n        legend.position = \"bottom\")\n\n\n\n\n\n\n\n\nThat “No Action” sure pops up out of nowhere, wow! Even more interestingly you can see that there is a long period of confirmations from the late 1800s up to about 1970-1990 when a few famous rejections take place - those of Clement Haynsworth Jr., Harrold. G. Carswell, and Robert H. Bork. One last interesting blip here is that of Harriet Miers withdrawn nomination in 2005, where in the face of bipartisan opposition President George Bush did a rare political takeback. This withdrawal was a fascinating wikipedia read that I was mostly unfamiliar with due to being 6 years old at the time, but the idea of Lindsey Graham and Sam Brownback asking the President’s office for a letter “in order to elucidate her views on political matters” is unthinkable in the modern era (and in light of the fact that the Supreme Court is of course apolitical!!).\nMy last statement on this is that it is pretty clear from the data, and historical viewpoint (that I don’t have time to devolve into right now), that after the initial turmoil of the Supreme Court’s establishment due to a lack of clarity in Article 3, Marbury v. Madison, slavery and the Civil War (okay tiny little dive into the history) there was an established precedent of concord on the Supreme Court that FDR briefly tried to break, and then the Republicans demolished in the 70s and 80s. The shocking lack of response from the Democratic party in this regard is showcased in the data as there is no political blowback until too late in 2013. If it’s too late, what can be done now? In the clearly apolitical landscape of the Supreme Court you would think nothing, but if you look at Supreme Court tenureship you might actually think, well, something.\nTaking a look at the data for Republican vs. Democratic nominees tenureship and appointment rates we see more of the same trend, and more of a solution for the Democratic party.\n\nsupreme_court &lt;- readr::read_csv(\"https://epstein.usc.edu/s/justicesdata2022.csv\")\n\nsupreme_court_final &lt;- supreme_court |&gt;\n  dplyr::select(justice = name,\n         nominated = datenom,\n         terminated = datesere,\n         president = presname) |&gt;\n  dplyr::filter(terminated != \"888. NOMINEE NOT CONFIRMED OR DIDN'T SERVE\") |&gt;\n  dplyr::mutate(\n    nominated = as.Date(nominated, format = \"%m/%d/%Y\"),\n    terminated = as.Date(terminated, format = \"%m/%d/%Y\"),\n    id = readr::parse_number(president),\n    president = stringr::str_remove_all(president, \"\\\\d+\\\\. \")\n  ) |&gt;\n  dplyr::select(-president)\n\npresidents_page &lt;- rvest::read_html(\"https://en.wikipedia.org/wiki/List_of_presidents_of_the_United_States\")\n\npresidents_terms &lt;- presidents_page |&gt;\n  rvest::html_elements(\".wikitable\") |&gt;\n  rvest::html_table()\n\npresidents_terms_final &lt;- presidents_terms[[1]] |&gt;\n  dplyr::select(-5) |&gt;\n  dplyr::rename(no = `No.[a]`,\n         name = `Name(Birth–Death)`,\n         term = `Term[14]`,\n         party = `Party[b][15]`,\n         election = Election,\n         vice_president = `Vice President[16]`) |&gt;\n  tidyr::separate_wider_delim(cols = term, delim = \"–\", names = c(\"start_pres\", \"end_pres\")) |&gt;\n  dplyr::mutate(name = stringr::str_remove_all(name, \"\\\\(.*?\\\\).*\"),\n         start_pres = as.Date(start_pres, format = \"%b %d, %Y\"),\n         end_pres = as.Date(end_pres, format = \"%b %d, %Y\"))\n\nsupreme_presidents &lt;- presidents_terms_final |&gt;\n  dplyr::select(no, name, start_pres, end_pres, party) |&gt;\n  dplyr::left_join(supreme_court_final, by = c(\"no\" = \"id\")) |&gt;\n  dplyr::mutate(party = ifelse(!party %in% c(\"Democratic\", \"Republican\"), \"Other\", party),\n         color = dplyr::case_when(party == \"Democratic\" ~ \"blue\",\n                           party == \"Republican\" ~ \"red\",\n                           party == \"Other\" ~ \"gray30\")\n         )\n\nFirst a little tidbit - which President had the most supreme court appointments? FDR seems likely given his length of tenure as President, but actually its George Washington! The rest of the field is quite a distance back, and the only modern President with more than 4 is Eisenhower which says quite a bit about the Warren court era, and the shift in the Republican party’s politics.\n\nsupreme_presidents |&gt;\n  dplyr::group_by(name) |&gt;\n  dplyr::count(sort = T) |&gt;\n  dplyr::ungroup() |&gt;\n  gt::gt() |&gt;\n  gt::cols_label(\n    name = \"President\",\n    n = \"Appointments\",\n  ) |&gt;\n  gt::data_color(\n    columns = n,\n    target_columns = n,\n    method = \"numeric\",\n    palette = \"ggsci::blue_material\"\n  ) |&gt;\n  gt::opt_interactive(\n    use_search = TRUE,\n    page_size_default = 10\n  ) |&gt;\n  DGThemes::gt_theme_duncan()\n\n\n\n\n\n\n\n\nAlright now the juicy stuff - lets look at appointments by party of president over time (excluding data prior to the clear formation of the modern dominant political parties). Looks like a rough last 40 years for the Democratic party, as usual its a really good thing that the Supreme Court is apolitical and rests its laurels on its impartiality!\n\njust_pres &lt;- supreme_presidents |&gt;\n  dplyr::distinct(name, .keep_all = TRUE) |&gt;\n  dplyr::select(name, start_pres, end_pres)\n\np &lt;- vistime::gg_vistime(supreme_presidents |&gt; \n                           dplyr::filter(party != \"Other\") |&gt; \n                           dplyr::distinct(justice, .keep_all = TRUE),\n        col.event = \"name\",\n        col.start = \"nominated\",\n        col.end = \"terminated\",\n        col.group = \"party\",\n        linewidth = 5,\n        show_labels = FALSE,\n        optimize_y = TRUE,\n        col.color = \"color\",\n        title = \"Supreme Court Appointments by President and Party\") +\n  # geom_text(data = just_pres, aes(label = name, x = start_pres, y = 1)) +\n  theme_light() +\n  theme(\n    plot.title = element_text(hjust = 0.5, family = \"Fira Sans Bold\", size = 20, face = \"bold\"),\n    # text = element_text(family = \"Fira Sans SemiBold\", size = 5),\n    axis.text.y = element_text(size = 17, family = \"Fira Sans\"),\n    axis.text.x = element_text(size = 17, family = \"Fira Sans\")\n  )\n\np\n\n\n\n\n\n\n\n\nWhile the visual makes some things clear it also prompts more questions - what is the average period of time for which a Supreme Court justice sits?\n\naverage_justice_tenure &lt;- supreme_presidents |&gt;\n  dplyr::mutate(tenure = terminated - nominated) |&gt;\n  dplyr::summarise(mean_tenure = mean(tenure, na.rm = TRUE))\n\n# Convert from days to years\naverage_justice_tenure |&gt; dplyr::pull() |&gt; as.numeric() / 365\n\n[1] 15.11006\n\n\n15 years is a good amount of time, but that average over all of the court’s history might not be as relevant anymore, additionally that number accounts for the pre-two party era, so what does the breakdown look like for more recent data and by party?\nFirst for all time, it looks like the Democratic Party has healthier nominees by about 2 years!\n\naverage_justice_tenure_by_party &lt;- supreme_presidents |&gt;\n  dplyr::filter(party != \"Other\") |&gt;\n  dplyr::mutate(tenure = terminated - nominated) |&gt;\n  dplyr::group_by(party) |&gt;\n  dplyr::summarise(mean_tenure = mean(tenure, na.rm = TRUE)) |&gt;\n  dplyr::ungroup()\n\naverage_justice_tenure_by_party |&gt;\n  gt::gt() |&gt;\n  gt::cols_label(\n    party = \"Party of President at Time of Nomination\",\n    mean_tenure = \"Avg. Tenure (Days)\"\n  ) |&gt;\n  DGThemes::gt_theme_duncan()\n\n\n\n\n\n\n\n\nParty of President at Time of Nomination\nAvg. Tenure (Days)\n\n\n\n\nDemocratic\n6051.925\n\n\nRepublican\n5486.56\n\n\n\n\n\n\n\n\nLooking at just the last 80 years, or since the end of WWII this actually continues to hold true, the Democratic parties nominees have an additional ~3 years on Republican nominees on average. What does this say? Democratic nominees sure love to hang around on the Supreme Court for a while!\n\nsupreme_presidents |&gt;\n  dplyr::filter(party != \"Other\" & nominated &gt;= as.Date(\"1980-01-01\")) |&gt;\n  dplyr::mutate(tenure = terminated - nominated) |&gt;\n  dplyr::group_by(party) |&gt;\n  dplyr::summarise(mean_tenure = paste0(mean(tenure, na.rm = TRUE), \" days\")) |&gt;\n  dplyr::ungroup() |&gt;\n  gt::gt() |&gt;\n  gt::cols_label(\n    party = \"Party of President at Time of Nomination\",\n    mean_tenure = \"Avg. Tenure\"\n  ) |&gt;\n  DGThemes::gt_theme_duncan()\n\n\n\n\n\n\n\n\nParty of President at Time of Nomination\nAvg. Tenure\n\n\n\n\nDemocratic\n10097 days\n\n\nRepublican\n8977.6 days\n\n\n\n\n\n\n\n\nSince Democratic nominees love to hang around lets see who gets more nominations - since we calculated the all time average tenure of a Justice to be about 15 years earlier I’ll chart the number of justices each party gets to nominate every 15 years. This shows about what we saw in the data earlier - aside from FDR the Republican party has done a fantastic job nominating new justices, at about ~ 2.5x the rate of the Democratic Party!\n\n# Rolling average tenure by president\n\nmodern_supreme_presidents &lt;- supreme_presidents |&gt;\n  dplyr::filter(party != \"Other\")\n\n# Group every 15 years and see how many republican and how many democratic nominees there are\nevery_15_years_pres_sup &lt;- modern_supreme_presidents |&gt;\n  dplyr::mutate(every_15 = lubridate::floor_date(nominated, unit = \"15 years\")) |&gt;\n  dplyr::group_by(every_15, party) |&gt;\n  dplyr::count() |&gt;\n  dplyr::ungroup() \n\nevery_15_years_pres_sup |&gt;\n  ggplot2::ggplot(aes(x = every_15, y = n, fill = party)) +\n  ggplot2::geom_col(position = position_dodge(), alpha = 0.9) +\n  ggplot2::scale_fill_manual(values = c(\"blue\", \"red\")) +\n  ggplot2::scale_x_date(date_breaks = \"20 years\", date_labels = \"%Y\") +\n  ggplot2::labs(title = \"Nominations by Party every 15 Years\", x = \"year\") +\n  DGThemes::theme_duncan() +\n  ggplot2::theme(legend.title = ggplot2::element_blank())"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hey! I am a data scientist at Teaching Lab with a BS in Mathematical Economics as well as minors in Actuarial Science, Political Science, and Spanish. My diversity of interests going into college lead to me (clearly) taking a variety of paths that ultimately coalesced into a career in data science, with many other interests and hobbies in which I avidly take armchair expertise.\nI had actually never REALLY coded (not counting TI-83 programming in algebra classes) until an econometrics class I took in my junior year of college, in which I was introduced to R. The basis of this course was essentially just learning to type summary(lm(y ~ x, data = econ)) in R, but I quickly realized how much more was possible as I was first introduced to the tidyverse, then spent most of my summer working in R for an internship at Data Science for the Public Good at Oregon State. This summer was of course in the midst of the beginning of the ongoing covid-19 pandemic which spurred my interest and time spent in the world & community of R.\nI am very much not a poster or active on social media, and although I am not prominent in the R community I very actively follow it on twitter, through blog posts, and occasionally in user meetups such as the Portland R User Group. Most of my participation can be found in my package development on github where I have thus far made a personal theme package {DGThemes}, a {NewYoRkTimes} app that solves both the Spelling Bee game, and the mini crossword each day. Additionally I have some interesting/fun Shiny apps such as my [Spotify data exploration app]{https://dungates.shinyapps.io/Spotify/}, Housing analysis app, Image Manipulation app, and others I write about in the Projects/Writing part.\nI have had the tremendous fortune to have extremely capable and helpful teachers in my education of R, statistics, and data science. My infinite thanks goes to the people who helped me get to where I am today."
  },
  {
    "objectID": "maps.html",
    "href": "maps.html",
    "title": "Maps",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "maps.html#quarto",
    "href": "maps.html#quarto",
    "title": "Maps",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "maps.html#running-code",
    "href": "maps.html#running-code",
    "title": "Maps",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  }
]